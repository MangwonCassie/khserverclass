/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.73
 * Generated at: 2023-05-10 07:51:02 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import com.kh.member.model.vo.Member;

public final class index_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(1);
    _jspx_dependants.put("/views/common/menubar.jsp", Long.valueOf(1683294980361L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("com.kh.member.model.vo.Member");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>Insert title here</title>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("\r\n");
      out.write("	");
      out.write('\r');
      out.write('\n');

	//contextRoot 가져오기	
	String contextPath = request.getContextPath();

	//System.out.println(contextPath);   /jsp 가 뽑힘
	
	//로그인 유저 정보 꺼내오기
	Member loginUser = (Member)session.getAttribute("loginUser");
	//로그인 되어있지 않으면 null(attribute에 loginUser라는 키값에 해당하는 데이터가 없으니까) 
	//로그인이 되어있다면 해당 유저정보가 담긴 Member객체가 반환 
	
	//알림 메세지도 꺼내주기
	String alertMsg = (String)session.getAttribute("alertMsg");

      out.write("\r\n");
      out.write("	\r\n");
      out.write("	\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!-- 부트스트랩은 4줄 필요 한줄 삭제되어있었음 -->\r\n");
      out.write("<!-- Latest compiled and minified CSS -->\r\n");
      out.write("<link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/bootstrap@4.6.2/dist/css/bootstrap.min.css\">\r\n");
      out.write("<!-- jQuery library -->\r\n");
      out.write("<script src=\"https://code.jquery.com/jquery-3.6.4.js\" integrity=\"sha256-a9jBBRygX1Bh5lt8GZjXDzyOB+bWve9EiO7tROUtj/E=\" crossorigin=\"anonymous\"></script>\r\n");
      out.write("<!-- Popper JS -->\r\n");
      out.write("<script src=\"https://cdn.jsdelivr.net/npm/popper.js@1.16.1/dist/umd/popper.min.js\"></script>\r\n");
      out.write("\r\n");
      out.write("<!-- Latest compiled JavaScript -->\r\n");
      out.write("<script src=\"https://cdn.jsdelivr.net/npm/bootstrap@4.6.2/dist/js/bootstrap.bundle.min.js\"></script>\r\n");
      out.write("\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>Insert title here</title>\r\n");
      out.write("<style>\r\n");
      out.write("#login-form, #user-info {\r\n");
      out.write("	float: right;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("#user-info a {\r\n");
      out.write("	text-decoration: none;\r\n");
      out.write("	color: black;\r\n");
      out.write("	font-size: 12px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".nav-area {\r\n");
      out.write("	background-color: black;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".menu {\r\n");
      out.write("	display: inline-block; /*인라인 요소처럼 배치*/\r\n");
      out.write("	height: 50px;\r\n");
      out.write("	width: 150px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".menu a {\r\n");
      out.write("	text-decoration: none;\r\n");
      out.write("	color: white;\r\n");
      out.write("	font-size: 20px;\r\n");
      out.write("	font-weight: bold;\r\n");
      out.write("	display: block; /*block으로 지정후 width/height 100%하면\r\n");
      out.write("                        해당블럭에 꽉차게 설정 가능*/\r\n");
      out.write("	width: 100%;\r\n");
      out.write("	height: 100%;\r\n");
      out.write("	line-height: 50px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".outer {\r\n");
      out.write("	background-color: black;\r\n");
      out.write("	color: white;\r\n");
      out.write("	width: 1000px;\r\n");
      out.write("	height: 900px;\r\n");
      out.write("	margin: auto;\r\n");
      out.write("	margin-top: 50px;\r\n");
      out.write("}\r\n");
      out.write("</style>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("	<script>\r\n");
      out.write("		//script태그 내에서도 스크립틀릿과 같은 jsp요소를 사용할 수 있다.\r\n");
      out.write("		\r\n");
      out.write("		var msg = \"");
      out.print(alertMsg);
      out.write("\"; //성공적으로 로그인 되었습니다 / null\r\n");
      out.write("		\r\n");
      out.write("		if(msg !=\"null\"){\r\n");
      out.write("			alert(msg);\r\n");
      out.write("			//알람메세지 한번 띄웠으면 지워주기 지우지 않으면 매번 menubar.jsp가 열릴때마다 알림뜸\r\n");
      out.write("			\r\n");
      out.write("			");
session.removeAttribute("alertMsg");
      out.write("\r\n");
      out.write("			\r\n");
      out.write("		}\r\n");
      out.write("	</script>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("	<h1 align=\"center\">Welcome my web</h1>\r\n");
      out.write("\r\n");
      out.write("	<div class=\"login-area\">\r\n");
      out.write("\r\n");
      out.write("		<!--로그인 전에 보여질 화면-->\r\n");
      out.write("		");
if(loginUser == null) {
      out.write("\r\n");
      out.write("		<!-- 처음부터 경로 다 잡아줌 form action=\"/jsp/login.me\" -->\r\n");
      out.write("		<form action=\"/jsp/login.me\" method=\"post\" id=\"login-form\">\r\n");
      out.write("			<!-- table>(tr>th+td)*2 -->\r\n");
      out.write("			<table>\r\n");
      out.write("				<tr>\r\n");
      out.write("					<th>아이디</th>\r\n");
      out.write("					<td><input type=\"text\" name=\"userId\" required></td>\r\n");
      out.write("				</tr>\r\n");
      out.write("				<tr>\r\n");
      out.write("					<th>비밀번호</th>\r\n");
      out.write("					<td><input type=\"password\" name=\"userPwd\" required></td>\r\n");
      out.write("				</tr>\r\n");
      out.write("				<tr>\r\n");
      out.write("					<th colspan=\"2\">\r\n");
      out.write("						<button type=\"submit\">로그인</button>\r\n");
      out.write("						<button type=\"button\" onclick=\"enrollPage();\">회원가입</button>\r\n");
      out.write("					</th>\r\n");
      out.write("				</tr>\r\n");
      out.write("			</table>\r\n");
      out.write("		</form>\r\n");
      out.write("		\r\n");
      out.write("		<script>\r\n");
      out.write("			function enrollPage(){\r\n");
      out.write("				//location.href = \"");
      out.print(contextPath);
      out.write("/views/member/memberEnrollForm.jsp\";\r\n");
      out.write("				//웹 애플리케이션의 디렉토리 구조가 그대로 url에 노출되어 보안에 취약해진다.\r\n");
      out.write("				//단순 페이지 이동이여도 servlet을 거쳐서 매핑값이 노출되어 갈수있도록 작업하기.\r\n");
      out.write("				\r\n");
      out.write("				location.href =\"");
      out.print(contextPath);
      out.write("/enrollForm.me\";\r\n");
      out.write("				\r\n");
      out.write("			}\r\n");
      out.write("		\r\n");
      out.write("		</script>\r\n");
      out.write("		\r\n");
      out.write("		\r\n");
      out.write("		\r\n");
      out.write("		\r\n");
      out.write("		");
}else{ 
      out.write("\r\n");
      out.write("		<!--로그인 후에 보여질 화면-->\r\n");
      out.write("		<div id=\"user-info\">\r\n");
      out.write("			<b>");
      out.print(loginUser.getUserName());
      out.write("님</b> 환영합니다. <br>\r\n");
      out.write("			<br>\r\n");
      out.write("			<div align=\"center\">\r\n");
      out.write("				<a href=\"");
      out.print(contextPath);
      out.write("/myPage.me\">마이페이지</a> <a href=\"");
      out.print(contextPath);
      out.write("/logout.me\">로그아웃</a>\r\n");
      out.write("			</div>\r\n");
      out.write("		</div>\r\n");
      out.write("		");
} 
      out.write("\r\n");
      out.write("	</div>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("	<br clear=\"both\">\r\n");
      out.write("	<!--float속성 해제-->\r\n");
      out.write("	<br>\r\n");
      out.write("\r\n");
      out.write("	<div class=\"nav-area\" align=\"center\">\r\n");
      out.write("		<div class=\"menu\">\r\n");
      out.write("			<a href=\"\">HOME</a>\r\n");
      out.write("		</div>\r\n");
      out.write("		<div class=\"menu\">\r\n");
      out.write("			<a href=\"");
      out.print(contextPath);
      out.write("/list.no\">공지사항</a>\r\n");
      out.write("		</div>\r\n");
      out.write("		<div class=\"menu\">\r\n");
      out.write("			<a href=\"");
      out.print(contextPath);
      out.write("/list.bo?currentPage=1\">일반게시판</a>\r\n");
      out.write("		</div>\r\n");
      out.write("		<div class=\"menu\">\r\n");
      out.write("			<a href=\"");
      out.print(contextPath);
      out.write("/list.ph\">사진게시판</a>\r\n");
      out.write("		</div>\r\n");
      out.write("	</div>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
      out.write("\r\n");
      out.write("	\r\n");
      out.write("	<!--\r\n");
      out.write("		C R U D \r\n");
      out.write("		Create(insert) Read(select) Update Delete\r\n");
      out.write("		 \r\n");
      out.write("		--회원서비스 \r\n");
      out.write("		로그인 : R \r\n");
      out.write("		회원가입 : C \r\n");
      out.write("		정보변경 : U\r\n");
      out.write("		회원탈퇴 : U or D \r\n");
      out.write("		마이페이지 : R  \r\n");
      out.write("		\r\n");
      out.write("		--게시판\r\n");
      out.write("		게시글 조회 : R\r\n");
      out.write("		게시글 작성 : C\r\n");
      out.write("		게시글 수정 : U\r\n");
      out.write("		게시글 삭제 : U or D\r\n");
      out.write("		\r\n");
      out.write("		댓글 작성 : C\r\n");
      out.write("		댓글 조회 : R\r\n");
      out.write("		댓글 수정 : U\r\n");
      out.write("		댓글 삭제 : U or D\r\n");
      out.write("	\r\n");
      out.write("	 -->\r\n");
      out.write("	\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
